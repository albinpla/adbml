{
  "_from": "bloom-filter-js",
  "_id": "bloom-filter-js@0.0.12",
  "_inBundle": false,
  "_integrity": "sha1-iVUPG5evG/Xy+6QEimR+vz010R8=",
  "_location": "/bloom-filter-js",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "bloom-filter-js",
    "fetchSpec": "latest",
    "name": "bloom-filter-js",
    "raw": "bloom-filter-js",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/bloom-filter-js/-/bloom-filter-js-0.0.12.tgz",
  "_shasum": "89550f1b97af1bf5f2fba4048a647ebf3d35d11f",
  "_spec": "bloom-filter-js",
  "_where": "/home/wiz/adb/firefox/major",
  "author": {
    "email": "netzen@gmail.com",
    "name": "Brian R. Bondy",
    "url": "http://www.brianbondy.com"
  },
  "bugs": {
    "url": "https://github.com/bbondy/bloom-filter-js/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Bloom filter written in JS for JavaScript strings. Tests whether an element belongs to a set. False positive matches are possible, false negatives are not.",
  "devDependencies": {
    "babel-eslint": "^4.1.3",
    "babel-jest": "*",
    "babel-jsm-plugin": "^1.0.1",
    "eslint": "^1.6.0",
    "jest-cli": "*"
  },
  "homepage": "https://github.com/bbondy/bloom-filter-js#readme",
  "jest": {
    "moduleFileExtensions": [
      "js"
    ],
    "scriptPreprocessor": "<rootDir>/node_modules/babel-jest",
    "testFileExtensions": [
      "js"
    ]
  },
  "license": "MPL-2.0",
  "main": "dist/src/main.js",
  "name": "bloom-filter-js",
  "optionalDependencies": {},
  "readme": "# bloom-filter-js\n\n## Installation\n\n    npm install bloom-filter-js\n\n## Usage\n\n```javascript\nlet BloomFilter = require('bloom-filter-js');\n\nlet b = new BloomFilter();\nb.add('Brian');\nb.add('Ronald');\nb.add('Bondy');\n\n// Prints true\nconsole.log(b.exists('Brian'));\n\n// Prints false\nconsole.log(b.exists('Brian Ronald'));\n\n// Serialize to a JSON friendly format\nlet json = JSON.stringify(b.toJSON());\n\n// Create a new BloomerFilter form a previous serialization\nlet b2 = BloomFilter.from(JSON.parse(json));\n\n// Will print the same as b.exists\nconsole.log(b2.exists('Brian'));\nconsole.log(b2.exists('Brian Ronald'));\n\n// Char code arrays can be passed in directly too\nconst toCharCodeArray = (str) => str.split('').map(c => c.charCodeAt(0));\n// Will return the same as without converting it to char codes\nconsole.log(b2.exists(toCharCodeArray('Brian')));\nconsole.log(b2.exists(toCharCodeArray('Brian Ronald')));\n\n// And you can check if any substring of a passed string exists\n// Returns true\nconsole.log(b.substringExists('Hello my name is Brian', 5));\n// Returns false\nconsole.log(b.substringExists('Hello my name is Bri', 3));\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bbondy/bloom-filter-js.git"
  },
  "scripts": {
    "build": "babel --modules umd src/*.js --out-dir dist  --source-maps",
    "build-jsm": "babel --modules ignore --plugins babel-jsm-plugin src/*.js --out-dir dist --source-maps",
    "lint": "eslint src/*.js",
    "prepublish": "npm run build",
    "test": "jest --verbose"
  },
  "version": "0.0.12"
}
